import ballerina/grpc;
import ballerina/time;
import ballerina/protobuf.types.empty;

public isolated client class UserServiceClient {
    *grpc:AbstractClientEndpoint;

    private final grpc:Client grpcClient;

    public isolated function init(string url, *grpc:ClientConfiguration config) returns grpc:Error? {
        self.grpcClient = check new (url, config);
        check self.grpcClient.initStub(self, ROOT_DESCRIPTOR_72_SERVICE_WITH_UPDATED_PROTO_DEFINITION_SERVICE, getDescriptorMap72ServiceWithUpdatedProtoDefinitionService());
    }

    isolated remote function GetOrganization(GetOrganizationRequest|ContextGetOrganizationRequest req) returns GetOrganizationResponse|grpc:Error {
        map<string|string[]> headers = {};
        GetOrganizationRequest message;
        if req is ContextGetOrganizationRequest {
            message = req.content;
            headers = req.headers;
        } else {
            message = req;
        }
        var payload = check self.grpcClient->executeSimpleRPC("UserService/GetOrganization", message, headers);
        [anydata, map<string|string[]>] [result, _] = payload;
        return <GetOrganizationResponse>result;
    }

    isolated remote function GetOrganizationContext(GetOrganizationRequest|ContextGetOrganizationRequest req) returns ContextGetOrganizationResponse|grpc:Error {
        map<string|string[]> headers = {};
        GetOrganizationRequest message;
        if req is ContextGetOrganizationRequest {
            message = req.content;
            headers = req.headers;
        } else {
            message = req;
        }
        var payload = check self.grpcClient->executeSimpleRPC("UserService/GetOrganization", message, headers);
        [anydata, map<string|string[]>] [result, respHeaders] = payload;
        return {content: <GetOrganizationResponse>result, headers: respHeaders};
    }

    isolated remote function GetGroup() returns Group|grpc:Error {
        empty:Empty message = {};
        map<string|string[]> headers = {};
        var payload = check self.grpcClient->executeSimpleRPC("UserService/GetGroup", message, headers);
        [anydata, map<string|string[]>] [result, _] = payload;
        return <Group>result;
    }

    isolated remote function GetGroupContext() returns ContextGroup|grpc:Error {
        empty:Empty message = {};
        map<string|string[]> headers = {};
        var payload = check self.grpcClient->executeSimpleRPC("UserService/GetGroup", message, headers);
        [anydata, map<string|string[]>] [result, respHeaders] = payload;
        return {content: <Group>result, headers: respHeaders};
    }
}

public client class UserServiceGetOrganizationResponseCaller {
    private grpc:Caller caller;

    public isolated function init(grpc:Caller caller) {
        self.caller = caller;
    }

    public isolated function getId() returns int {
        return self.caller.getId();
    }

    isolated remote function sendGetOrganizationResponse(GetOrganizationResponse response) returns grpc:Error? {
        return self.caller->send(response);
    }

    isolated remote function sendContextGetOrganizationResponse(ContextGetOrganizationResponse response) returns grpc:Error? {
        return self.caller->send(response);
    }

    isolated remote function sendError(grpc:Error response) returns grpc:Error? {
        return self.caller->sendError(response);
    }

    isolated remote function complete() returns grpc:Error? {
        return self.caller->complete();
    }

    public isolated function isCancelled() returns boolean {
        return self.caller.isCancelled();
    }
}

public client class UserServiceGroupCaller {
    private grpc:Caller caller;

    public isolated function init(grpc:Caller caller) {
        self.caller = caller;
    }

    public isolated function getId() returns int {
        return self.caller.getId();
    }

    isolated remote function sendGroup(Group response) returns grpc:Error? {
        return self.caller->send(response);
    }

    isolated remote function sendContextGroup(ContextGroup response) returns grpc:Error? {
        return self.caller->send(response);
    }

    isolated remote function sendError(grpc:Error response) returns grpc:Error? {
        return self.caller->sendError(response);
    }

    isolated remote function complete() returns grpc:Error? {
        return self.caller->complete();
    }

    public isolated function isCancelled() returns boolean {
        return self.caller.isCancelled();
    }
}

public type ContextGroup record {|
    Group content;
    map<string|string[]> headers;
|};

public type ContextGetOrganizationRequest record {|
    GetOrganizationRequest content;
    map<string|string[]> headers;
|};

public type ContextGetOrganizationResponse record {|
    GetOrganizationResponse content;
    map<string|string[]> headers;
|};

public type Group record {|
    int id = 0;
    string org_name = "";
    string org_uuid = "";
    string description = "";
    boolean default_group = false;
    map<anydata> other_data = {};
    User owner = {};
    string name?;
    string reg_name?;
|};

isolated function isValidGroup(Group r) returns boolean {
    int display_nameCount = 0;
    if !(r?.name is ()) {
        display_nameCount += 1;
    }
    if !(r?.reg_name is ()) {
        display_nameCount += 1;
    }
    if (display_nameCount > 1) {
        return false;
    }
    return true;
}

isolated function setGroup_Name(Group r, string name) {
    r.name = name;
    _ = r.removeIfHasKey("reg_name");
}

isolated function setGroup_RegName(Group r, string reg_name) {
    r.reg_name = reg_name;
    _ = r.removeIfHasKey("name");
}

public type Organization record {|
    int id = 0;
    string uuid = "";
    string 'handle = "";
    string name = "";
    User owner = {};
|};

public type User record {|
    int id = 0;
    string idp_id = "";
    string picture_url = "";
    string email = "";
    string display_name = "";
    boolean is_anonymous = false;
    time:Utc created_at = [0, 0.0d];
    time:Utc expired_at = [0, 0.0d];
|};

public type GetOrganizationRequest record {|
    string organization_name = "";
|};

public type GetOrganizationResponse record {|
    Organization organization = {};
    boolean is_admin = false;
|};

const string

public isolated function getDescriptorMap72ServiceWithUpdatedProtoDefinitionService() returns map<string> {
    return {"72_service_with_updated_proto_definition_service.protogoogle/protobuf/empty.proto": "0A1B676F6F676C652F70726F746F6275662F656D7074792E70726F746F120F676F6F676C652E70726F746F62756622070A05456D70747942540A13636F6D2E676F6F676C652E70726F746F627566420A456D70747950726F746F50015A057479706573F80101A20203475042AA021E476F6F676C652E50726F746F6275662E57656C6C4B6E6F776E5479706573620670726F746F33", "google/protobuf/struct.protogoogle/protobuf/timestamp.proto": "0A1F676F6F676C652F70726F746F6275662F74696D657374616D702E70726F746F120F676F6F676C652E70726F746F627566223B0A0954696D657374616D7012180A077365636F6E647318012001280352077365636F6E647312140A056E616E6F7318022001280552056E616E6F7342580A13636F6D2E676F6F676C652E70726F746F627566420E54696D657374616D7050726F746F50015A057479706573F80101A20203475042AA021E476F6F676C652E50726F746F6275662E57656C6C4B6E6F776E5479706573620670726F746F33"};
}

